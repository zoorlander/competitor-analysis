#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
"""

import asyncio
from agents.competitor_agent import CompetitorAgent
from config.settings import load_config


async def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_config('config/default.yaml')
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = CompetitorAgent(config)
    
    # –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    companies = [
        "Tesla",
        "OpenAI", 
        "Stripe"
    ]
    
    print("üîç –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...")
    
    for company in companies:
        print(f"\nüìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: {company}")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
            results = await agent.analyze_competitor(
                company_name=company,
                output_dir=f"reports/{company.lower()}"
            )
            
            print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ {company} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            website_data = results.get('website_data', {})
            social_data = results.get('social_data', {})
            
            print(f"   üì± –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö: {social_data.get('summary', {}).get('total_followers', 0)}")
            print(f"   üåê –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–∞ —Å–∞–π—Ç–µ: {len(website_data.get('technologies', []))}")
            print(f"   üì¶ –ü—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(website_data.get('products', []))}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {company}: {e}")
    
    print("\nüéâ –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∫–æ–º–ø–∞–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üìÅ –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ reports/")


if __name__ == "__main__":
    asyncio.run(main())
